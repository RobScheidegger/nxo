@page "/"
@using NXO.Shared.Models
@inject NavigationManager navigation 
@inject HttpClient Http

<div class="container">
    <div class="row">
        <div class="col-lg-4">

        </div>
        <div class="col-lg-4">
            <div class="p-3 m-auto">
                <h3>Login</h3>
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert alert-danger">
                        @ErrorMessage
                    </div>
                }
                <div class="form-group">
                    <label class="control-label">Game Code</label>
                    <input name="GameCode" class="form-control" @bind-value="@GameCode" />
                </div>
                <div class="form-group">
                    <label class="control-label">Nickname</label>
                    <input name="GameCode" class="form-control" @bind-value="@Nickname" />
                </div>
                <div class="form-group">
                    <label class="control-label">Create Lobby</label>
                    <select name="GameCode" class="form-control" @bind="@LobbyType">
                        @if (GameTypes != null)
                        {
                            @foreach (var type in GameTypes)
                            {
                                <option value="@type.GameType">@type.Name</option>
                            }
                        }
                        else
                        {
                            <option>Loading...</option>
                        }
                    </select>
                </div>
                <div class="m-2">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="m-1">
                                <a class="btn btn-success col-lg-12" @onclick="ClickCreateGameButton" href="#">
                                    <i class="fas fa-plus mr-1"></i>
                                    New Lobby
                                </a>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="m-1">
                                <a class="btn btn-primary col-lg-12" @onclick="ClickJoinButton" href="#">
                                    <i class="fas fa-plus mr-1"></i>
                                    Join
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">

        </div>
    </div>
</div>


@code {
    private string GameCode { get; set; }
    private string Nickname { get; set; }
    private string LobbyType { get; set; }
    private string ErrorMessage { get; set; }
    private IEnumerable<GameTypesResponse> GameTypes { get; set; }
    protected override async Task OnInitializedAsync()
    {
        GameTypes = await Http.GetFromJsonAsync<IEnumerable<GameTypesResponse>>("Lobby/GameTypes");
        LobbyType = GameTypes.FirstOrDefault()?.GameType;
    }

    private async Task ClickCreateGameButton()
    {
        var request = new CreateLobbyRequest()
        {
            GameType = LobbyType,
            Nickname = Nickname
        };
        var result = await Http.PostFromJsonAsync<CreateLobbyRequest, CreateLobbyResult>("Lobby/Create", request);
        if(result.Success)
        {
            navigation.NavigateTo($"{LobbyType}/lobby/{result.LobbyCode}/{result.PlayerId}");
        }
        else
        {
            ErrorMessage = result.Message;
            StateHasChanged();
        }
    }

    private async Task ClickJoinButton()
    {
        var request = new JoinRequest()
        {
            GameCode = GameCode,
            Nickname = Nickname
        };
        var result = await Http.PostFromJsonAsync<JoinRequest, JoinResult>("Lobby/Join", request);
        if(result.Success)
        {
            navigation.NavigateTo($"{LobbyType}/lobby/{GameCode}/{result.PlayerId}");
        }
        else
        {
            ErrorMessage = result.RejectMessage;
            StateHasChanged();
        }
    }
}
